import pygame
import random

# Инициализация Pygame
pygame.init()

# Настройки окна игры
WINDOW_WIDTH = 640
WINDOW_HEIGHT = 480
TILE_SIZE = 32

# Цвета
BLACK = (0, 0, 0)
YELLOW = (255, 255, 0)
RED = (255, 0, 0)
BLUE = (0, 0, 255)

# Создаем окно
screen = pygame.display.set_mode((WINDOW_WIDTH, WINDOW_HEIGHT))
pygame.display.set_caption('Pacman')

# Частота кадров
FPS = 60
clock = pygame.time.Clock()

# Счетчик очков
score = 0

# Карта игры в виде списка строк
level_map = [
    "####################",
    "#..................#",
    "#.###.###.###.###.#.#",
    "#..................#",
    "#.#.#.#.#.#.#.#.#.#.#",
    "#..................#",
    "####################"
]

# Начальное положение Пакмана
pacman_x, pacman_y = 1, 1

# Начальное положение призраков
ghosts = [(5, 5), (6, 5), (5, 6)]

# Функция для отрисовки Пакмана
def draw_pacman(x, y):
    screen.blit(pacman_img, (x * TILE_SIZE, y * TILE_SIZE))

# Функция для отрисовки призраков
def draw_ghosts(ghosts):
    for ghost in ghosts:
        screen.blit(ghost_img, (ghost[0] * TILE_SIZE, ghost[1] * TILE_SIZE))

# Функция для отрисовки карты
def draw_map():
    for y in range(len(level_map)):
        for x in range(len(level_map[y])):
            if level_map[y][x] == '#':
                screen.blit(wall_img, (x * TILE_SIZE, y * TILE_SIZE))
            elif level_map[y][x] == '.':
                pygame.draw.circle(screen, YELLOW, (x * TILE_SIZE + TILE_SIZE // 2, y * TILE_SIZE + TILE_SIZE // 2), 3)

# Функция для перемещения Пакмана
def move_pacman(dx, dy):
    global pacman_x, pacman_y, score
    new_x = pacman_x + dx
    new_y = pacman_y + dy
    # Проверяем, можно ли переместиться на новую позицию
    if level_map[new_y][new_x] != '#':
        pacman_x = new_x
        pacman_y = new_y
        # Проверяем, есть ли точка на новой позиции
        if level_map[pacman_y][pacman_x] == '.':
            score += 10
            level_map[pacman_y][pacman_x] = ' '

# Функция для перемещения призраков
def move_ghosts():
    global ghosts
    for i in range(len(ghosts)):
        # Случайное направление для перемещения призрака
        direction = random.choice([(0, 1), (0, -1), (1, 0), (-1, 0)])
        new_x = ghosts[i][0] + direction[0]
        new_y = ghosts[i][1] + direction[1]
        # Проверяем, можно ли переместиться на новую позицию
        if level_map[new_y][new_x] != '#':
            ghosts[i] = (new_x, new_y)

# Функция для проверки столкновения между Пакманом и призраками
def check_collision():
    global running
    for ghost in ghosts:
        if pacman_x == ghost[0] and pacman_y == ghost[1]:
            running = False  # Конец игры

# Загрузка изображений
pacman_img = pygame.image.load('pacman.png')
ghost_img = pygame.image.load('ghost.png')
wall_img = pygame.image.load('wall.png')

# Основной цикл игры
running = True
while running:
    # Обрабатываем события
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # Получаем состояние клавиатуры
    keys = pygame.key.get_pressed()

    # Управляем Пакманом
    if keys[pygame.K_LEFT]:
        move_pacman(-1, 0)
    if keys[pygame.K_RIGHT]:
        move_pacman(1, 0)
    if keys[pygame.K_UP]:
        move_pacman(0, -1)
    if keys[pygame.K_DOWN]:
        move_pacman(0, 1)

    # Перемещение призраков
    move_ghosts()

    # Проверка на столкновение с призраками
    check_collision()

    # Очистка экрана
    screen.fill(BLACK)

    # Отрисовка карты, Пакмана и призраков
    draw_map()
    draw_pacman(pacman_x, pacman_y)
    draw_ghosts(ghosts)

    # Отображение счета
    font = pygame.font.Font(None, 36)
    score_text = font.render(f'Score: {score}', True, YELLOW)
    screen.blit(score_text, (10, 10))

    # Обновление экрана
    pygame.display.update()

    # Частота кадров
    clock.tick(FPS)

# Завершение Pygame
pygame.quit()
